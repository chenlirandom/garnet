Import( 'env GN_targets GN_func' )

env = env.Copy()
if '/W4' in env['CCFLAGS']: env['CCFLAGS'].remove('/W4')
if 'icl' == env['CC']:
    unimportant_warnings = [
        '1572', # floating-point comparison
        ]
    env.Append( CCFLAGS = ['/W3'] + ['/Qwd%s'%w for w in unimportant_warnings] )
elif 'cl' == env['CC']:
    env.Append( CCFLAGS= ['/W3'] )

env.Append( CPPPATH = '../inc/garnet/extern' )

# compile jpeg library
jpeg_env = env.Copy()
jpeg_env.Append( CPPPATH = [Dir('jpeg').srcnode()] )
if 'gcc' == env['CC']: jpeg_env.Append( CCFLAGS = ['-Wno-main'] )
jpeg_objs = jpeg_env.GN_build_static_objects( GN_func['glob']( '*.c', 'jpeg' ), pdb = 'GNextern.pdb' )

# build source list
srcs = GN_func['glob']( '*.c', Split('glew lua zlib png pcre') ) \
     + GN_func['glob']( ['*.cpp', '*.cc'], Split('tinyxml pcre') ) \
     + jpeg_objs

env.GN_build_static_library( 'GNextern', srcs )
