Import('env GN_targets GN_conf')

import os.path

#
#
# -----------------------------------------------------------------------------
def to_relpath( files ):
    return [ env.GN_relpath( File(x).path, Dir('.').srcnode().path ) for x in files ]

#
#
# -----------------------------------------------------------------------------
def build_proj( target, srcdir=[], incdir=[], moduleName='' ):
    if not target in GN_targets: return

    sources = env.GN_glob( ['%s/*.[c]*'%x for x in srcdir], True )
    if 0 == len(incdir):
        if '' == moduleName: moduleName = target
        includes = env.GN_glob( '#src/priv/inc/garnet/%s.h'%moduleName )
        includes += env.GN_glob( '#src/priv/inc/garnet/%s/*.[hi]*'%moduleName[2:], True )
    else:
        includes = env.GN_glob( ['%s/*.[hi]*'%x for x in incdir], True )
    localincs = env.GN_glob( ['%s/*.[hi]*'%x for x in srcdir], True )

    proj = env.MSVSProject(
        target      = target + env['MSVSPROJECTSUFFIX'],
        buildtarget = GN_targets[target][0],
        variant     = GN_conf['variant'],
        srcs        = to_relpath(sources),
        incs        = to_relpath(includes),
        localincs   = to_relpath(localincs),
        resources   = [],
        misc        = [],
        )

    env.AlwaysBuild( proj );

###############################################################################
#
# Build project for garnet components
#
###############################################################################

build_proj( 'GNextern', ['#src/extern/src'], ['#src/extern/inc'] )
build_proj( 'GNbase', ['#src/priv/base'], ['#src/priv/inc'] )
build_proj( 'GNcore', ['#src/priv/core'] )
build_proj( 'GNgfxCommon', ['#src/priv/gfx/common'], [], 'GNgfx' )
build_proj( 'GNgfxD3D', ['#src/priv/gfx/d3d'], [], 'GNgfx' )
build_proj( 'GNgfxOGL', ['#src/priv/gfx/ogl'], [], 'GNgfx' )
build_proj( 'GNinput', ['#src/priv/input'] )
build_proj( 'GNwin', ['#src/priv/win'] )
build_proj( 'GNd3d', ['#src/priv/d3d'] )
build_proj( 'GNogl', ['#src/priv/ogl'] )
build_proj( 'GNut', ['#src/priv/test/ut'] )
build_proj( 'GNgfxTest', ['#src/priv/test/gfx'] )
build_proj( 'GNinputTest', ['#src/priv/test/input'] )
build_proj( 'GNd3dTest', ['#src/priv/test/d3d'] )
build_proj( 'GNoglTest', ['#src/priv/tesg/ogl'] )
build_proj( 'GNwinTest', ['#src/priv/tesg/win'] )
