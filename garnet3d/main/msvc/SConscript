Import('GN env compiler variant name target')

import os.path

if 'vc80-x64' == compiler:
    variant_str = '%s|x64'%variant
    target_dir = '8.0'
elif 'vc80' == compiler:
    variant_str = '%s|Win32'%variant
    target_dir = '8.0'
elif 'xenon' == compiler:
    variant_str = '%s|Xenon'%variant
    target_dir = '7.1'
else:
    variant_str = '%s|Win32'%variant
    target_dir = '7.1'

absdir = Dir(target_dir).srcnode().abspath

if not os.path.exists( absdir ) : os.makedirs( absdir )

cmdargs = 'variant_str=%s compiler=%s'%(variant,compiler)

def to_relpath( files ):
    return [ GN.relpath( File(x).path, Dir(target_dir).srcnode().path ) for x in files ]

sources = []
for x in target.sources : sources += x.sources
localincs = GN.glob( '%s/*.[c]*'%target.path, True )

print target.targets[0]
proj = env.MSVSProject(
    target      = os.path.join( target_dir, name ) + env['MSVSPROJECTSUFFIX'],
    buildtarget = target.targets[0],
    variant     = variant_str,
    cmdargs     = cmdargs,
    srcs        = [],#to_relpath( sources ),
    incs        = [],
    localincs   = [],#to_relpath( localincs ),
    resources   = [],
    misc        = [],
    auto_build_solution = 0,
    )
Alias( 'msvc', proj )
