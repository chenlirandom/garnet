@echo off

if not exist mtrndrCommandMeta.txt (
    echo ERROR: mtrndrCommandMeta.txt not found!
    goto :EOF
)

set TARGET=mtrndrCmd.h

REM generate file header
echo //>%TARGET%
echo // DO NOT EDIT. Generated by "gencmd.cmd">>%TARGET%
echo //>>%TARGET%
echo.>>%TARGET%
echo namespace GN { namespace gfx>>%TARGET%
echo {>>%TARGET%
echo.>>%TARGET%

REM generate enum table
echo ///>>%TARGET%
echo /// Renderer command enumerations.>>%TARGET%
echo ///>>%TARGET%
echo enum RndrCommand {>>%TARGET%
for /F "tokens=1*" %%a in ( mtrndrCommandMeta.txt ) do echo CMD_%%a,%%b>>%TARGET%
echo };>>%TARGET%
echo.>>%TARGET%

REM generate handler table
echo ///>>%TARGET%
echo /// Renderer command handler type.>>%TARGET%
echo ///>>%TARGET%
echo typedef void (*RndrCommandHandler)( Renderer ^& r, void * param, size_t size );>>%TARGET%
echo.>>%TARGET%
echo ///>>%TARGET%
echo /// Renderer command handler table.>>%TARGET%
echo ///>>%TARGET%
echo extern const RndrCommandHandler g_rndrCommandHandlers[];>>%TARGET%
echo.>>%TARGET%

REM generate end of file
echo }} // end of file>>%TARGET%


set TARGET=mtrndrCmd.cpp

REM file header
echo //>%TARGET%
echo // DO NOT EDIT. Generated by "gencmd.cmd">>%TARGET%
echo //>>%TARGET%
echo.>>%TARGET%
echo #include "pch.h">>%TARGET%
echo #include "mtrndrCmd.h">>%TARGET%
echo.>>%TARGET%
echo namespace GN { namespace gfx>>%TARGET%
echo {>>%TARGET%
echo.>>%TARGET%

REM function prototypes
for /F "tokens=1" %%a in ( mtrndrCommandMeta.txt ) do echo void func_%%a( Renderer ^&, void *, size_t );>>%TARGET%
echo.>>%TARGET%

REM handler table
echo const RndrCommandHandler g_rndrCommandHandlers[] = {>>%TARGET%
for /F "tokens=1" %%a in ( mtrndrCommandMeta.txt ) do echo ^&func_%%a,>>%TARGET%
echo };>>%TARGET%
echo.>>%TARGET%

echo }} // end of file>>%TARGET%

REM done
echo DONE!