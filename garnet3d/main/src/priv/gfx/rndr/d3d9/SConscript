Import( 'GN' )
sources = [
    'd3d9BasicShaderCg.cpp',
    'd3d9CapsMgr.cpp',
    'd3d9ContextMgr.cpp',
    'd3d9DispMgr.cpp',
    'd3d9DrawMgr.cpp',
    'd3d9IdxBuf.cpp',
    'd3d9Line.cpp',
    'd3d9PxlShaderAsm.cpp',
    'd3d9PxlShaderHlsl.cpp',
    'd3d9Renderer.cpp',
    'd3d9RenderTargetMgrPC.cpp',
    'd3d9RenderTargetMgrXenon.cpp',
    'd3d9Resource.cpp',
    'd3d9ResourceManager.cpp',
    'd3d9StateDumper.cpp',
    'd3d9Texture.cpp',
    'd3d9VertexDecl.cpp',
    'd3d9VtxBuf.cpp',
    'd3d9VtxShaderAsm.cpp',
    'd3d9VtxShaderHlsl.cpp',
]
cluster = GN.newSourceCluster( sources, 'pch.h', 'pch.cpp' )
target = GN.newTarget( 'shlib', 'GNrndrD3D9', [cluster], dependencies = ['GNrndrCommon'] )
if GN.conf['has_cg_d3d9'] :
    cluster.addCompileFlags( CPPDEFINES = ['HAS_CG=1','HAS_CG_D3D9=1'] )
    target.externalDependencies += ['cgD3D9']
