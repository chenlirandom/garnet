Import( 'GN' )
sources = [
    'oglCapsMgr.cpp',
    'oglContextMgr.cpp',
    'oglDispMgrMsw.cpp',
    'oglDispMgrX11.cpp',
    'oglDrawMgr.cpp',
    'oglIdxBuf.cpp',
    'oglLine.cpp',
    'oglProgramCg.cpp',
    'oglProgramGLSL.cpp',
    'oglGpu.cpp',
    'oglRenderTargetMgrCopyFrame.cpp',
    'oglRenderTargetMgrFBO.cpp',
    'oglResource.cpp',
    'oglResourceMgr.cpp',
    'oglTexture.cpp',
    'oglVtxBufNormal.cpp',
    'oglVtxBufVBO.cpp',
    'oglVtxFmt.cpp',
]
cluster = GN.newSourceCluster( sources, 'pch.h', 'pch.cpp' )
cluster.addCompileFlags( CPPPATH=['#src/priv/gfx/util/gpu'] )
target = GN.newTarget( 'stlib', 'GNgpuOGL', [cluster], dependencies = ['GNgpuCommon'] )
target.externalDependencies += GN.conf['ogl_libs']
if GN.conf['has_cg_ogl'] :
    cluster.addCompileFlags( CPPDEFINES = ['HAS_CG=1','HAS_CG_OGL=1'] )
    target.externalDependencies += ['cg','cgGL']
