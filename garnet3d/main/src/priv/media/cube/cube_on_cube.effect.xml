<?xml version="1.0" encoding="utf-8"?>
<effect>
	<parameters>
		<uniform name="pvw" type="matrix"/>
		<texture name="cube"/>
	</parameters>

	<!--
	============================================================================
	GPU Programs
	============================================================================
	-->

	<gpuprograms>

		<!-- D3D HLSL9 shaders -->
		<gpuprogram name="d3d" lang="HLSL9">
			<uniref uniform="pvw" shaderParameter="pvw"/>
			<texref texture="cube" shaderParameter="s0"/>
			<vs entry="main">
<![CDATA[
uniform float4x4 pvw : register(c0);
void main(
	in  float4 ipos : POSITION0,
	out float4 opos : POSITION0,
	out float3 otex : TEXCOORD0 )
{
	opos = mul( pvw, ipos );
	otex = sign( ipos.xyz );
}
]]>
			</vs>
			<ps entry="main">
<![CDATA[
sampler s0 : register(s0);
float4 main( in float4 ipos: POSITION0, in float3 itex : TEXCOORD0 ) : COLOR0
{
	return texCUBE( s0, itex );
}
]]>
			</ps>
		</gpuprogram>

		<!-- Cg shaders -->
		<gpuprogram name="cg" lang="CG">
			<uniref uniform="pvw" shaderParameter="pvw"/>
			<texref texture="cube" shaderParameter="s0"/>
			<vs entry="main">
<![CDATA[
uniform float4x4 pvw : register(c0);
void main(
	in  float4 ipos : POSITION,
	out float4 opos : POSITION,
	out float3 otex : TEXCOORD0 )
{
	opos = mul( pvw, ipos );
	otex = sign( ipos.xyz ); // Note: Cg 1.5 has bug to compile this statement to vs_3_0 assembly.
}
]]>
			</vs>

			<ps>
<![CDATA[
sampler s0 : register(s0);
float4 main( in float3 itex : TEXCOORD0 ) : COLOR0
{
	return texCUBE( s0, itex );
}
]]>
			</ps>
		</gpuprogram>

	</gpuprograms>

	<!--
	============================================================================
		Techniques
	============================================================================
	-->

	<techniques>
        <renderstates
            CULL_MODE="CULL_NONE"
        />
		<technique name="d3d">
			<pass gpuprogram="d3d"/>
		</technique>
		<technique name="cg">
			<pass gpuprogram="cg"/>
		</technique>
	</techniques>
</effect>
