TODO
====

- 程序中标注TODO的地方

- p0
  - renderer unit test framework
  - better PCXS2 GPU plugin:
    - move operations to GPU as much as possible
    - model beautifier
      - add bump map and tessellation to PS2 model if possible.
      - implement a CPU based prototype first.

- p1
  - C# style enumeration: put enum into class's private namespace
  - GFX resouce aliasing
  - D3D10 renderer
  - Xenon renderer
  - render to texture tests
    - render to both color textures and depth texture.
    - render to color textures only. No depth buffers at all. (depth read and
      depth write are disabled)
    - render to depth textures only. No color buffers at all. (color write is
      disabled)
    - render to color textures with default depth buffer
    - render to back buffer and depth texture
  - some commonly used effects:
    - flat( no light, one diffuse texture, XYZ_UV0 )
    - normal map(single light, one diffuse, one normal map, XYZ_NORMAL_TANGENT_UV0 )
    - skeleton animation

- p2
  - FBX mesh loader
  - XML effect file.
  - DDS viewer plugin
  	- don't write full viewer from scratch.
  	- just provide a plugin for existing picture viewers like acdsee or something.
  - sigslot class:
    - allow any type of functor
    - check behavior of redundant slot functors.
  - skin mesh test case: porting DXSDK sample.
  - memory-mapped IO.

- p3
  - XML: pointer from parent to last child, for constant time child appending.
  - Custom sscanf(...)
  - cross-platform window util functions:
    - set window title
    - change window size
    - ...
  - runtime call-stack dump
  - in game GUI:
  - debug variable registry
    - debug variable viewer and modifier
  - COLLADA loader
  - make sure OGL resource creation/deletion do not affect renderer states
    - depends on renderer state dumper

- more
  - new build system
  - image format conversion
  - try implementing a ray tracer

ISSUES
======

- Unified interface for different APIs is too difficult, and maybe pointless.
  How about a higher level abstraction: material/effect system?
  - RESOLVED: higher effect based system is the way to go.

- Do we need embed buffer for short string?

- Custom string class or std::string?
  - RESOLVED: custom string class.
  - WHY?
    - std::string can't accept NULL pointer as valid input.
    - std::char_trait<wchar_t> is not well supported on cygwin.

- TinyXml or Expat w/ DOM wrapper?
  - RESOLVED: expat.
    - expat is faster.
    - custom DOM wrapper fits our requirement better, and is pretty easy to implement.

DROPPED TASKS
=============
- runtime configuable profilers, like loggers
  - WHY: rofiler has to be light-weight and fast. Logger style configuration
         is too heavy.
