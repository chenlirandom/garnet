- 2006.10.1
  - merge changes in nes branch back to main tree

- 2006.9.30
  - continue working on new effect system...
  - refine resource manager to allow template handle type
  - refine FOURCC structure
  - new method to class SharedLib to get library handle
  - new method to class ImageDesc to determine image type (1D, 2D, cube and etc.)

- 2006.9.22
  - upgrade to version 0.8.0

- 2006.9.2
  - UT for Str::findFirst/LastOf(...)
  - continue implementing new log system

- 2006.8.26
  - refine log system, inspired...ok, copied from apache log4j. 

- 2006.6.30
  - continue implementing FatMesh class
  - UT for array classes

- 2006.6.28
  - remove CAPS_PER_STAGE_CONSTANT
  - custom array classes: fixed-sized, stack-based, heap-based
  - simplify variant and registry class to make them more intuitive

- 2006.5.24
  - new quad rendering option: DQ_DEPTH_ENABLE
  - walkaround Xenon D3D CheckDeviceFormat() failure.
  - Fix Xenon build breaks.
  - BMP image loader
  - implement common endian swap util functions

- 2006.5.7
  - add memory-mapping interface to File class

- 2006.5.6
  - remove security warnings of vs8
  - str2Int() functions.
  - new mbs2wcs() functiont to write to wchar_t buffer directly. (with UT)

- 2006.5.5
  - refine interface of File class:
    - read() and write() now returns boolean, instead of size.
    - eof() will return true, if error happens.
    - size() and tell() will return 0, if error happens.

- 2006.4.30
  - refine build script:
    - new build variant: PROFILE
    - rename RELEASE build to RETAIL build
    - more flexible compiler definition

- 2006.4.29
  - upgrade to doxygen 1.4.6
  - upgrade to lua 5.1
  - refine log functions
  - refine render target management of D3D9 renderer.

- 2006.4.27
  - redesign resource manager classes to avoid using singleton

- 2006.4.11
  - add: user-supplied hints to shader creation.

- 2006.3.28:
  - call convension support to functor
  - switchable runtime assert behavior

- Before 2006.3.28
  - Rewrite SCons script
  - sample: render to texture
  - import a GUI toolkit : FOX-TOOLKIT
  - resource managers (textures, meshes, materials/effects)
  - implement core module
  - POSIX implementation
    - implement input module on POSIX platform
    - implement GNogl on POSIX platform
  - UT for getEnv() and setEnv().
  - convert input module to static library
  - SCons
    - EMT64 icl support
  - Refine GFX:
    - refine resource lock flags
      - LOCK_NORMAL, LOCK_READONLY, LOCK_DISCARD, LOCK_NO_OVERWRITE,
      - no combination.
    - OGL GLSL shader
    - parameter manager
    - quad renderer for GFXOGL module
    - d3d hlsl shader
    - ogl ARB shader
    - Fix link problem of GFX module in static build.
    - fix device-lost bug in GNtestGfx
    - refine device management
    - drawQuad(...)
      - D3D9Quad(): support to FFP
    - buffer manager of GFXOGL
    - vertex binding of GFXOGL
    - enable multiple context support of GLEW
    - Window property save/restore
    - Refine ntWindow class:
      - support external window
      - getClientSize();
    - remove platform specific code from display manager.
    - UT for GFX module: using external render window
  - Run UT for both GFXD3D and GFXOGL will throw exception.
    - FIXED: should use different render window class for each instance of NTRenderWindow.
