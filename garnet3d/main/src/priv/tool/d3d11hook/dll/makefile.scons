Import( 'GN' )

env = GN.NewBuildEnv()
env.Prepend( CPPPATH = ['d3dheaders'] )
#env.Append( LINKFLAGS = ['/DEF:%s'%File('myd3d11.def').srcnode().path] )

hookdll = GN.BinplaceDLL( GN.BuildDLL( env, 'GNd3d11Hook',
	[
        'dllmain.cpp',
	    'hooks.cpp',
        'd3d11interfaces.cpp',
        'd3d11hooks.cpp',
		'd3d11factories.cpp',
	],
	'pch.h', 'pch.cpp' ) )

GN.NewDefaultTarget( 'GNd3d11Hook', hookdll )

wrapper_env = env.Clone()
wrapper_env.Append( LIBPATH = ['.'], LIBS = ['GNd3d11Hook'] )
GN.NewDefaultTarget(
	'd3d11',
	GN.BinplaceDLL( GN.BuildDLL( wrapper_env, 'd3d11wrapper',
	[
	    'exports_d3d11.cpp',
	    'exports_d3d11_asm.asm',
	],
	defFile='exports_d3d11.def' ), rename='d3d11.dll', extraDependencies=hookdll ) )

GN.NewDefaultTarget(
	'dxgi',
	GN.BinplaceDLL( GN.BuildDLL( wrapper_env, 'dxgiwrapper',
	[
	    'exports_dxgi.cpp',
	    'exports_dxgi_asm.asm',
	],
	defFile='exports_dxgi.def' ), rename='dxgi.dll', extraDependencies=hookdll ) )
