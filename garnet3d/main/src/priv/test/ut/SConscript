Import( 'GN' )

import sys

# build case list
cases = []
cases += GN.glob( 'base/*.cpp' )
#if GN.conf['has_ogl']: cases += ['gfx/ogl.cpp']
#if GN.conf['has_d3d9']: cases += ['gfx/d3d9.cpp']

# generate cxxtest glue file.
cxxtest = Command(
    'ut.cpp', cases,
    '%s %s --error-printer --include="garnet/GNbase.h" -o $TARGET ${SOURCES.abspath}'%(
        sys.executable,
        File('cxxtestgen.py').srcnode().path)
    )
Depends( cxxtest, 'cxxtestgen.py' )

# build unit test application
cluster = GN.newSourceCluster( [str(cxxtest[0]),'testCommon.cpp'] )
if GN.conf['has_boost']: cluster.addCompileFlags( CPPDEFINES = ['HAS_BOOST'] )
GN.newTarget( 'prog', 'GNut', [cluster] )

# disable signed compare with unsigned warning of GCC
if 'gcc' == GN.compiler.name: cluster.addCompileFlags( CCFLAGS=['-Wno-sign-compare'] )
