Import( 'GN' )

if GN.has_d3d11:

    def Fx2Cpp( target, source, env ):
        s = open( source[0].path, 'r' )
        t = open( target[0].path, 'w' )
        for line in s:
            t.write( '"%s \\n"\n'%line.strip( '\r\n' ) )
        return None

    env = GN.NewBuildEnv();

    fxo = env.Command(
        'shaders.fxo',
        'shaders.fx',
        '"fxc.exe" /T fx_5_0 /Fo $TARGET $SOURCE')

    fxh = env.Command( 'shaders.h', 'shaders.fx', Fx2Cpp );

    main2 = env.Command( 'main2.cpp', 'main.cpp', Copy("$TARGET", "$SOURCE") );

    env.Depends( main2, [fxo,fxh] );

    env.Append(LIBS = ['d2d1.lib', 'dwrite.lib'])

    sources = [
        "main2.cpp",
        "d3dx11dbg.cpp",
        "d3dxGlobal.cpp",
        "EffectAPI.cpp",
        "EffectLoad.cpp",
        "EffectNonRuntime.cpp",
        "EffectReflection.cpp",
        "EffectRuntime.cpp",
    ]

    GN.NewDefaultTarget(
        'GNtestD3D11',
        GN.BinplaceProgram( GN.BuildProgram( env, 'GNtestD3D11', sources, 'pch.h', 'pch.cpp' ) ) )
