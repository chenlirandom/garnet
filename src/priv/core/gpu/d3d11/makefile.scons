Import( 'GN' )
sources = [
	'd3d11Buffer.cpp',
	'd3d11CapsMgr.cpp',
	'd3d11ContextMgr.cpp',
	'd3d11DispMgr.cpp',
	'd3d11DrawMgr.cpp',
	'd3d11GpuProgramHLSL.cpp',
	'd3d11GpuProgramCG.cpp',
	'd3d11IdxBuf.cpp',
	'd3d11Gpu.cpp',
	'd3d11Resource.cpp',
	'd3d11ResourceManager.cpp',
	'd3d11RenderTargetMgr.cpp',
	'd3d11StateObject.cpp',
	'd3d11Texture.cpp',
	'd3d11VtxBuf.cpp',
	'd3d11VtxLayout.cpp',
]
env = GN.NewBuildEnv()
env.Append( CPPPATH = ['#src/priv/core/gpu/util'] )
if GN.has_cg_d3d11 :
    env.Append( CPPDEFINES = ['HAS_CG=1','HAS_CG_D3D=1'] )
objects = GN.BuildObjects( env, sources, 'pch.h', 'pch.cpp' )
Return( 'objects' )
