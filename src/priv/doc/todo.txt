- 程序中标注TODO的地方

- p0
  - PS2 model beautifier(add bump map and tessellation to PS2 model)
    - ASE or FBX mesh loader
      - mesh hierachy
      - optional features
        - XML mesh file with embeded binary data
        - XML effect file.
    - some standard light effects:
      - flat( no light, one diffuse texture, XYZ_UV0 )
      - normal map(single light, one diffuse, one normal map, XYZ_NORMAL_TANGENT_UV0 )
      - skin
    - a fast mesh smooth implementation.

- p1
  - D3D10 rendererer

- p2
  - XML: pointer from parent to last child, for constant time child appending.
  - runtime configuable profilers, like loggers
  - sigslot class:
    - allow any type of functor
    - check behavior of redundant slot functors.
  - skin mesh test case: porting DXSDK sample.
  - memory-mapped IO.

- p3
  - code page convertor and test application
    - may support convertion from/to utf8 be enough?
  - Custom sscanf(...)
  - cross-platform window util functions:
    - set window title
    - change window size
    - ...
  - runtime call-stack dump
  - in game GUI:
  - debug variable registry
    - debug variable viewer and modifier
  - COLLADA loader
  - make sure OGL resource creation/deletion do not affect renderer states
    - depends on renderer state dumper

- more
  - new build system
  - image format conversion
  - try implementing a ray tracer

ISSUES
======

- Unified interface for different APIs is too difficult, and maybe pointless.
  How about a higher level abstraction: material/effect system?
  - RESOLVED: higher effect based system is the way to go.

- Do we need embed buffer for short string?

- Custom string class or std::string?
  - RESOLVED: custom string class.
  - WHY?
    - std::string can't accept NULL pointer as valid input.
    - std::char_trait<wchar_t> is not well supported on cygwin.

- TinyXml or Expat w/ DOM wrapper?
  - RESOLVED: expat.
    - expat is faster.
    - custom DOM wrapper fits our requirement better, and is pretty easy to implement.
