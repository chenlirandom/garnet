<?xml version="1.0" encoding="utf-8"?>
<effect>
	<!-- render quad with single texture -->
	<parameters>
		<texture name="tex"/>
		<uniform name="rect" type="VECTOR4" count="1">0, 0, 1, 1</uniform> <!-- left, top, width, height -->
	</parameters>

	<!--
	============================================================================
		Shaders
	============================================================================
	-->

	<shaders>
		<!-- D3D HLSL shaders -->
		<shader name="d3dvs" type="VS">
			<prerequisites>
				<token type="opcode" value="CHECK_SHADER_PROFILE">
					<token type="values" value="vs_1_1"/>
				</token>
			</prerequisites>
			<uniref ref="rect" binding="rect"/>
			<code lang="D3D_HLSL" hints="...">
<![CDATA[
uniform float4 rect;
void main(
	in  float2 ipos : POSITION,
	in  float2 itex : TEXCOORD0,
	out float4 opos : POSITION,
	out float2 otex : TEXCOORD0 )
{
	opos.x = 2 * ( ipos.x * rect.z + rect.x ) - 1;
	opos.y = -2 * ( ipos.y * rect.w + rect.y ) + 1;
	opos.z = 0;
	opos.w = 1;
	otex = itex;
}
]]>
			</code>
		</shader>

		<shader name="d3dps" type="PS">
			<prerequisites>
				<token type="opcode" value="CHECK_SHADER_PROFILE">
					<token type="values" value="ps_1_1"/>
				</token>
			</prerequisites>
			<texref ref="tex" stage="0"/>
			<code lang="D3D_HLSL" hints="...">
<![CDATA[
sampler s0 : register(s0);
float4 main( in float2 itex : TEXCOORD0 ) : COLOR0
{
	return tex2D( s0, itex );
}
]]>
			</code>
		</shader>

		<!-- fixed pipeline -->
		<shader name="fixgs" type="GS"/>

	</shaders>

	<!--
	============================================================================
		Techniques
	============================================================================
	-->

	<techniques>
        <rsb
			BLENDING="TRUE"
			ALPHA_TEST="TRUE"
			ALPHA_REF="0"
			ALPHA_FUNC="CMP_GREATER"
        />
		<technique name="d3d">
			<pass vs="d3dvs" ps="d3dps" gs="fixgs"/>
		</technique>
	</techniques>
</effect>
