Import( 'GN_targets' )

env = Environment()

buildDir = '#tmp/scons/manual'

env.BuildDir( buildDir, '.' )

import sys, os.path
from string import Template

# prefix file/dir name with buildDir
def b(path): return os.path.join(buildDir,path)

# generate Doxyfile
def gen_doxyfile(target,source,env):

    fp = open( source[0].path )
    templ = Template( fp.read() )
    fp.close();

    doxy_dict = env['DOXYGEN']

    str = templ.substitute(
        OUTPUT_DIRECTORY    = doxy_dict['OUTPUT_DIRECTORY'],
        CHM_FILE            = doxy_dict['CHM_FILE'],
        HHC_LOCATION        = doxy_dict['HHC_LOCATION']
        )

    fp = open( target[0].path, 'w' )
    fp.write( str )
    fp.close();

    env.Depends( target, doxy_dict['HHC_LOCATION'] )

    return None

if 'win32' == env['PLATFORM']:
    doxygen = env.File('#src/extern/bin/win32/doxygen.exe').path
    genchm = 'YES'
else:
    doxygen = 'doxygen'
    genchm = 'NO'

doxyfile = env.Command(
    b('Doxyfile'),
    ['gendoxyfile.py', b('Doxyfile.in')],
    '%s $SOURCES OUTPUT_DIRECTORY=%s GENERATE_HTMLHELP=%s CHM_FILE=%s HHC_LOCATION=%s > $TARGET'%(
        sys.executable,
        env.Dir(b('.')).abspath,
        genchm,
        env.File(b('garnet3d.chm')).abspath,
        env.File('#src/extern/bin/win32/hhc.exe').abspath,
        ),
    )
env.Depends( doxyfile, 'gendoxyfile.py' )

if 'YES' == genchm :
    manual = env.Command( b('garnet3d.chm'), doxyfile, '%s $SOURCE'%doxygen )
    env.Depends( manual, env.GN_glob( '#src/priv/*.[h|inl]', True ) )
    GN_targets['GNman'] = manual
