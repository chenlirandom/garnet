<project name="Garnet3D" default="all" basedir=".">

	<taskdef resource="net/sf/antcontrib/antlib.xml"/>
	<taskdef resource="cpptasks.tasks"/>
	<typedef resource="cpptasks.types"/>

	<!--
	============================================================================
		Define global properties
	============================================================================
	-->

	<!-- detect current OS family -->
	<osfamily property="os.family"/>

	<!-- define user configuable properties and their default values -->
	<property name="platform" value="${os.family}"/>
	<property name="arch" value="${os.arch}"/>
	<condition property="toolset" value="vs8"><os family="windows"/></condition>
	<condition property="toolset" value="gcc"><os family="unix"/></condition>
	<property name="flavor" value="retail"/>
	<property name="cg" value="true"/>

	<!-- TODO: check value of user configuable properties -->

	<!-- Define private variables (user should not override values of these properties -->
	<property environment="env"/>
	<property name="root" location="${basedir}"/>
	<property name="bldroot" location="build.tmp/ant/${platform}/${arch}/${toolset}/${flavor}"/>
	<condition property="is_debug">
		<or>
			<equals arg1="${flavor}" arg2="debug"/>
			<equals arg1="${flavor}" arg2="stdbg"/>
		</or>
	</condition>
	<condition property="is_static">
		<or>
			<equals arg1="${flavor}" arg2="stdbg"/>
			<equals arg1="${flavor}" arg2="stprof"/>
			<equals arg1="${flavor}" arg2="strel"/>
		</or>
	</condition>

	<!--
	============================================================================
		Top level targets
	============================================================================
	-->

	<!--
		Show usage
	-->
	<target name="usage">
		<echo level="info"></echo>
	</target>

	<!--
		Do clean
	-->
	<target name="clean" depends="init">
		<delete dir="${bldroot}"/>
	</target>

	<!--
		Do compilation
	-->
	<target name="all" depends="init,config,GNbase">
	</target>

	<!--
	============================================================================
		Sub-component targets
	============================================================================
	-->

	<macrodef name="msvc_compile">
		<attribute name="if" default=""/>
		<attribute name="objdir"/>
		<attribute name="pch.header" default="pch.h"/>
		<attribute name="pch.source" default="pch.cpp"/>
		<sequential>
			<mkdir dir="@{objdir}"/>
			<var name="cmdargs" value="@{objdir}/cl.cmdargs.txt"/>
			<!-- write command arguments to file -->
			<echo message="/c /nologo" file="${cmdargs}"/>
			<!-- call cl -->
			<exec executable="cl">
				<arg value="@${cmdargs}"/>
			</exec>
		</sequential>
	</macrodef>

	<target name="GNbase">
		<msvc_compile objdir="${bldroot}/GNbase/base">
		</msvc_compile>
	</target>

	<!--
	============================================================================
		Utility tasks and targets
	============================================================================
	-->

	<!--
		Initialize build procedure
	-->
	<target name="init">
		<tstamp/>
		<echo level="info">
platform    = ${platform}
arch        = ${arch}
toolset     = ${toolset}
flavor      = ${flavor}
cg          = ${cg}
		</echo>
	</target>

	<!--
		Check configurations
	-->
	<target name="config">
		<condition property="has_d3d9" else="false">
			<and>
				<available file="d3d9.h" filepath="${env.INCLUDE}"/>
				<available file="d3dx9.h" filepath="${env.INCLUDE}"/>
				<available file="d3d9.lib" filepath="${env.LIB}"/>
				<available file="d3dx9.lib" filepath="${env.LIB}"/>
				<available file="d3dx9d.lib" filepath="${env.LIB}"/>
			</and>
		</condition>

		<condition property="has_d3d10" else="false">
			<!-- TODO: disable d3d10 on XP for static flavors -->
			<and>
				<available file="d3d10.h" filepath="${env.INCLUDE}"/>
				<available file="d3dx10.h" filepath="${env.INCLUDE}"/>
				<available file="d3dx10.lib" filepath="${env.LIB}"/>
				<available file="d3dx10d.lib" filepath="${env.LIB}"/>
			</and>
		</condition>

		<condition property="has_ogl" else="false">
			<and>
				<available file="GL/gl.h" filepath="${env.INCLUDE}"/>
				<available file="GL/glu.h" filepath="${env.INCLUDE}"/>
				<or>
					<and>
						<available file="opengl32.lib" filepath="${env.LIB}"/>
						<available file="glu32.lib" filepath="${env.LIB}"/>
					</and>
					<!-- TODO: check opengl libraries for unix system -->
				</or>
			</and>
		</condition>

		<condition property="has_cg" else="false">
			<and>
				<equals arg1="${cg}" arg2="true"/>
				<available file="Cg/cg.h" filepath="${env.INCLUDE}"/>
				<or>
					<available file="cg.lib" filepath="${env.LIB}"/>
					<!-- TODO: check Cg libraries on other platforms -->
				</or>
			</and>
		</condition>

		<condition property="has_cg_d3d9" else="false">
			<and>
				<equals arg1="${has_cg}" arg2="true"/>
				<equals arg1="${has_d3d9}" arg2="true"/>
				<available file="Cg/cgD3D9.h" filepath="${env.INCLUDE}"/>
				<available file="cgD3D9.lib" filepath="${env.LIB}"/>
			</and>
		</condition>

		<condition property="has_cg_ogl" else="false">
			<and>
				<equals arg1="${has_cg}" arg2="true"/>
				<equals arg1="${has_ogl}" arg2="true"/>
				<available file="Cg/cgGL.h" filepath="${env.INCLUDE}"/>
				<or>
					<available file="cgGL.lib" filepath="${env.LIB}"/>
					<!-- TODO: check Cg libraries on other platforms -->
				</or>
			</and>
		</condition>

		<!-- display property values -->
		<echo level="info">
has_d3d9    = ${has_d3d9}
has_d3d10   = ${has_d3d10}
has_ogl     = ${has_ogl}
has_cg      = ${has_cg}
has_cg_d3d9 = ${has_cg_d3d9}
has_cg_ogl  = ${has_cg_ogl}
		</echo>
	</target>
</project>
